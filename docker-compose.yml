services:
  postgres:
    image: postgres:16-alpine
    container_name: commandcenter_db
    environment:
      POSTGRES_DB: commandcenter
      POSTGRES_USER: commandcenter
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U commandcenter"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - commandcenter

  redis:
    image: redis:7-alpine
    container_name: commandcenter_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - commandcenter

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: commandcenter_backend
    environment:
      DATABASE_URL: postgresql://commandcenter:${DB_PASSWORD:-changeme}@postgres:5432/commandcenter
      SECRET_KEY: ${SECRET_KEY}
      RAG_STORAGE_PATH: /app/rag_storage
      CHROMADB_PATH: /app/rag_storage/chromadb
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      SLACK_TOKEN: ${SLACK_TOKEN:-}
      REDIS_URL: redis://redis:6379
    volumes:
      - rag_storage:/app/rag_storage
      - ./backend/output:/app/output
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - commandcenter

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: commandcenter_frontend
    environment:
      VITE_API_URL: http://localhost:8000
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - commandcenter

volumes:
  postgres_data:
    driver: local
  rag_storage:
    driver: local
  redis_data:
    driver: local

networks:
  commandcenter:
    driver: bridge

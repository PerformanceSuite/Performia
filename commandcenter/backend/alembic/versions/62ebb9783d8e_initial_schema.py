"""initial_schema

Revision ID: 62ebb9783d8e
Revises: 
Create Date: 2025-10-05 14:44:29.620454

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '62ebb9783d8e'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('repositories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('owner', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=512), nullable=False),
    sa.Column('github_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('url', sa.String(length=512), nullable=True),
    sa.Column('clone_url', sa.String(length=512), nullable=True),
    sa.Column('default_branch', sa.String(length=255), nullable=False),
    sa.Column('access_token', sa.String(length=512), nullable=True),
    sa.Column('is_private', sa.Boolean(), nullable=False),
    sa.Column('last_commit_sha', sa.String(length=40), nullable=True),
    sa.Column('last_commit_message', sa.Text(), nullable=True),
    sa.Column('last_commit_author', sa.String(length=255), nullable=True),
    sa.Column('last_commit_date', sa.DateTime(), nullable=True),
    sa.Column('last_synced_at', sa.DateTime(), nullable=True),
    sa.Column('stars', sa.Integer(), nullable=False),
    sa.Column('forks', sa.Integer(), nullable=False),
    sa.Column('language', sa.String(length=100), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('full_name')
    )
    op.create_table('technologies',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('vendor', sa.String(length=255), nullable=True),
    sa.Column('domain', sa.Enum('AUDIO_DSP', 'AI_ML', 'MUSIC_THEORY', 'PERFORMANCE', 'UI_UX', 'INFRASTRUCTURE', 'OTHER', name='technologydomain'), nullable=False),
    sa.Column('status', sa.Enum('DISCOVERY', 'RESEARCH', 'EVALUATION', 'IMPLEMENTATION', 'INTEGRATED', 'ARCHIVED', name='technologystatus'), nullable=False),
    sa.Column('relevance_score', sa.Integer(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('use_cases', sa.Text(), nullable=True),
    sa.Column('documentation_url', sa.String(length=512), nullable=True),
    sa.Column('repository_url', sa.String(length=512), nullable=True),
    sa.Column('website_url', sa.String(length=512), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('knowledge_entries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('technology_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=512), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('source_file', sa.String(length=512), nullable=True),
    sa.Column('source_url', sa.String(length=512), nullable=True),
    sa.Column('source_type', sa.String(length=100), nullable=True),
    sa.Column('vector_db_id', sa.String(length=255), nullable=True),
    sa.Column('embedding_model', sa.String(length=255), nullable=True),
    sa.Column('page_number', sa.Integer(), nullable=True),
    sa.Column('chunk_index', sa.Integer(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('relevance_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['technology_id'], ['technologies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('research_tasks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('technology_id', sa.Integer(), nullable=True),
    sa.Column('repository_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'BLOCKED', 'COMPLETED', 'CANCELLED', name='taskstatus'), nullable=False),
    sa.Column('uploaded_documents', sa.JSON(), nullable=True),
    sa.Column('user_notes', sa.Text(), nullable=True),
    sa.Column('findings', sa.Text(), nullable=True),
    sa.Column('assigned_to', sa.String(length=255), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('progress_percentage', sa.Integer(), nullable=False),
    sa.Column('estimated_hours', sa.Integer(), nullable=True),
    sa.Column('actual_hours', sa.Integer(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['repository_id'], ['repositories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['technology_id'], ['technologies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('research_tasks')
    op.drop_table('knowledge_entries')
    op.drop_table('technologies')
    op.drop_table('repositories')
    # ### end Alembic commands ###

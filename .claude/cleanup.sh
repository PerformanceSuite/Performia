#!/bin/bash
# Performia Session Cleanup Script
# Auto-generated by /end-session command
# Customize as needed for project-specific cleanup

set -e

PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
cd "$PROJECT_ROOT"

echo "🧹 Starting Performia session cleanup..."

# 1. Remove Python cache files
echo "  → Removing Python cache..."
find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
find . -type f -name "*.pyc" -delete 2>/dev/null || true
find . -type f -name "*.pyo" -delete 2>/dev/null || true
find . -type f -name "*.pyd" -delete 2>/dev/null || true

# 2. Remove Node.js cache (if applicable)
if [ -f "frontend/package.json" ]; then
    echo "  → Cleaning Node.js cache..."
    find frontend -type d -name ".vite" -exec rm -rf {} + 2>/dev/null || true
    find frontend -type d -name "node_modules/.cache" -exec rm -rf {} + 2>/dev/null || true
fi

# 3. Remove common temporary files
echo "  → Removing temporary files..."
find . -type f -name "*.tmp" -delete 2>/dev/null || true
find . -type f -name "*.log" -delete 2>/dev/null || true
find . -type f -name "*.swp" -delete 2>/dev/null || true
find . -type f -name "*.swo" -delete 2>/dev/null || true
find . -type f -name ".DS_Store" -delete 2>/dev/null || true
find . -type f -name "Thumbs.db" -delete 2>/dev/null || true

# 4. Remove empty directories
echo "  → Removing empty directories..."
find . -type d -empty -delete 2>/dev/null || true

# 5. Update timestamp in memory.md
if [ -f ".claude/memory.md" ]; then
    echo "  → Updating memory.md timestamp..."
    CURRENT_DATE=$(date "+%B %d, %Y")
    # Note: sed -i works differently on macOS vs Linux
    if [[ "$OSTYPE" == "darwin"* ]]; then
        sed -i '' "s/\*Last Updated\*:.*/\*Last Updated\*: $CURRENT_DATE/" .claude/memory.md
    else
        sed -i "s/\*Last Updated\*:.*/\*Last Updated\*: $CURRENT_DATE/" .claude/memory.md
    fi
fi

# 6. Project-specific cleanup (customize as needed)
echo "  → Running project-specific cleanup..."

# Clean backend test artifacts
if [ -d "backend/tests" ]; then
    find backend/tests -type f -name "*.pyc" -delete 2>/dev/null || true
    find backend/tests -type d -name ".pytest_cache" -exec rm -rf {} + 2>/dev/null || true
fi

# Clean frontend test coverage
if [ -d "frontend/coverage" ]; then
    rm -rf frontend/coverage 2>/dev/null || true
fi

echo "✅ Cleanup complete!"
echo ""
echo "📝 Next steps:"
echo "  1. Review .claude/memory.md for session summary"
echo "  2. Commit any uncommitted changes if needed"
echo "  3. Exit Claude Code"
echo ""
